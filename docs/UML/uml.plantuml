@startuml UML

' skinparam linetype ortho
' skinparam linetype polyline

skinparam class {
    ArrowColor DarkSlateGray

    StereotypeFontColor White
    AttributeIconSize 0
    AttributeFontColor white

	BackgroundColor<<View>> Coral
	BorderColor<<View>> LightCyan
    FontColor<<View>> White

	BackgroundColor<<Controller>> Teal 
	BorderColor<<Controller>> Whitesmoke
    FontColor<<Controller>> White

	BackgroundColor<<Model>> MediumSlateBlue
	BorderColor<<Model>> Whitesmoke
    FontColor<<Model>> White
}

class MainActivity <<View>> {
    - usernameField: EditText
    - passwordField: EditText
    - loginBtn: Button
    - signUpBtn: Button

    - onLoginBtnPressed(username: String, password: String)
    - onSignUpBtnPressed(username: String, password: String)
    - onAccountCreated(username: String, password: String)    
}

class LoginController <<Controller>> {
    + login(username: String, password: String)
}

class CreateProfileFragment <<View>> {
    - usernameField: EditText
    - passwordField: EditText
    - confirmPasswordField: EditText
    - confirmBtn: Button

    - onConfirm()
}

interface CreateProfileFragment.onAccountCreatedListener <<View>> {
    - onAccountCreated(username: String, password: String)    
}

class MyVibesActivity <<View>> {
    - vibeEventsAdapter: VibeEventsAdapter
    - filterField: EditText
    - socialBtn: Button
    - myProfileBtn: Button
    - followingVibesBtn: Button
    - mapBtn: Button
    - addVibeEventBtn: Button

    - viewVibeEvent(vibeEvent: VibeEvent)
    - editVibeEvent(vibeEvent: VibeEvent)
    - filterVibes(text: String)
    - getLocationPermission()
}

class ViewVibeEventActivity <<View>> {
    - vibeEmoticonField: ImageView
    - vibeNameField: TextView
    - dateField: TextView
    - reasonField: TextView
    - pictureField: ImageView
    - socialSituationField: TextView
}

class ViewProfileActivity <<View>> {
    - usernameField: TextView
    - logoutBtn: Button
}

class AddEditVibeEventActivity <<View>> {
    - vibePicker: VibePickerFragment
    - dateField: DatePicker
    - reasonField: EditText
    - pictureField: ImageView
    - socialSituationField: String
    - saveBtn: Button
    - deleteBtn: Button
}

class VibeEventsAdapter <<Controller>> {
    - vibeEventListController: VibeEventListController
    + showMyVibeEvents(vibeEventListController: VibeEventListController)
    + showFollowingVibeEvents(vibeEventListController: VibeEventListController)
}

class FollowingVibesActivity <<Controller>> {
    - vibeEventsAdapter: VibeEventsAdapter
    - socialBtn: Button
    - myProfileBtn: Button
    - followingVibesBtn: Button
    - mapBtn: Button

    - requestFollowingVibeEvents()
    - viewVibeEvent(vibeEvent: VibeEvent)
}

class MapActivity <<View>> {
    - vibeEventsAdapter: VibeEventsAdapter
}

class MyVibeEventsMapFragment <<View>> {
    - map: GoogleMap
    - db: FirebaseFirestore

    - addVibeMarkers(map: GoogleMap)
}

class SocialActivity <<View>> {
    - requests: ArrayList<Profile>
    - following: ArrayList<Profile>
    - followers: ArrayList<Profile>

    - getRelationships()
    - openRequestsFragment(requests: ArrayList<Profile>)
    - openFollowingFragment(following: ArrayList<Profile>)
    - openFollowersFragment(followers: ArrayList<Profile>)
}

class VibePickerFragment <<View>> {
    - vibePickerAdapter: VibePickerAdapter
    <<get>> - selectedVibe: Vibe
}

interface VibeEventController <<Controller>> {
    + pushToDatabase(vibeEvent: VibeEvent)
}

class VibeEventListController <<Controller>> {
    + requestMyVibeEvents()
    + requestFollowingVibeEvents()
}


class VibePickerAdapter <<Controller>> {
    - vibeList: ArrayList<Vibe>
}


class FollowersFragment <<View>> {
    - profileAdapter: ProfileAdapter
}

class FollowingFragment <<View>> {
    - profileAdapter: ProfileAdapter
}

class RequestsFragment <<View>> {
    - profileAdapter: ProfileAdapter
}

class SearchProfilesActivity <<View>> {
    - searchField: EditText
    - profileAdapter: ProfileAdapter
}

interface Vibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String
}

class VibeFactory <<Controller>> {
    + getVibe(selectedVibe: String)
}

class AddVibeEventController <<Controller>> {
    + addVibeEvent(Vibe, date: LocaleDateTime, reason: String, picture: ImageView, socialSituation: String)
    + pushToDatabase(vibeEvent: VibeEvent)
}

class EditVibeEventController <<Controller>> {
    + editVibeEvent(vibe: Vibe, date: LocaleDateTime, reason: String, picture: ImageView, socialSituation: String)
    + pushToDatabase(vibeEvent: VibeEvent)
}

class ProfileAdapter <<Controller>> {
    - profileController: ProfileController
    - showProfileRequests()
    - showFollowingList()
    - showFollowersList()
    - showSearchProfileResults()
}

class ClowneryVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String    
}

class HappyVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class SadVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class ScaredVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class DisgustedVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class SupriseVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class AngerVibe <<Model>> {
    <<get>> - emoticon: ImageView
    <<get>> - name: String   
}

class ProfileController <<Controller>> {
    - profile: Profile
    - requestProfileRequests()
    - requestFollowingList()
    - requestFollowersList()
    - requestSearchProfileResults()
}

class Profile <<Model>> {
    - username: String
    - followers: ArrayList<Profile>
    - following: ArrayList<Profile>
}

CreateProfileFragment.onAccountCreatedListener <|.. MainActivity
MainActivity "1" -- "1" LoginController
MainActivity "1" -- "1" CreateProfileFragment
MainActivity "1"-- "1" MyVibesActivity

MyVibesActivity "1" -- "1" ViewVibeEventActivity
MyVibesActivity "1" -- "1" ViewProfileActivity
MyVibesActivity "1" -- "1" AddEditVibeEventActivity
MyVibesActivity "1" o-- "1" VibeEventsAdapter
MyVibesActivity "1" -- "1" FollowingVibesActivity
MyVibesActivity "1" -- "1" MapActivity
MyVibesActivity "1" -- "1" SocialActivity

ViewVibeEventActivity "1" -- "1" AddEditVibeEventActivity

AddEditVibeEventActivity "1" o-- "1" VibePickerFragment
AddEditVibeEventActivity "1" o-- "1" VibeEventController

VibeEventsAdapter "1" o-- "1" VibeEventListController
VibeEventsAdapter "1" o-- "1" VibePickerAdapter

FollowingVibesActivity "1" o-- "1" VibeEventsAdapter
FollowingVibesActivity "1" -- "1" MapActivity

SocialActivity "1" -- "1" FollowersFragment
SocialActivity "1" -- "1" FollowingFragment
SocialActivity "1" -- "1" RequestsFragment
SocialActivity "1" -- "1" SearchProfilesActivity
SocialActivity "1" -- "1" MapActivity

VibePickerFragment "1" -- "0..*" VibeFactory
VibePickerFragment "1" o-- "1" VibePickerAdapter

VibeEventController <|-- AddVibeEventController
VibeEventController <|-- EditVibeEventController

VibeEventListController "1" -- "0..*" VibeFactory

MapActivity "1" -- "1" VibeEventListController
MapActivity "1" o-- "1" MyVibeEventsMapFragment

FollowersFragment "1" -- "1" ProfileAdapter
FollowingFragment "1" -- "1" ProfileAdapter
RequestsFragment "1" -- "1" ProfileAdapter
SearchProfilesActivity "1" -- "1" ProfileAdapter

VibeFactory "1" o-- "0..*" Vibe

Vibe <|.. ClowneryVibe
Vibe <|.. HappyVibe
Vibe <|.. SadVibe
Vibe <|.. ScaredVibe
Vibe <|.. DisgustedVibe
Vibe <|.. SupriseVibe
Vibe <|.. AngerVibe

ProfileAdapter "1" o-- "1" ProfileController

ProfileController "1" -- "0..*" Profile

Profile -- Profile: Followers
Profile -- Profile: Following
    
@enduml