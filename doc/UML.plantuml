@startuml UML

skinparam ClassAttributeIconSize 0

' ---------------------- Activities ----------------------

Class MainActivity {
    - usernameField: EditText
    - passwordField: EditText
    - loginBtn: Button
    - signUpBtn: Button
    - database: Database

    - onAccountCreated(username: String, password: String)
}

Class MyVibesActivity {
    - myVibesAdapter: MyVibesAdapter

    - filterField: EditText
    - socialBtn: Button
    - myProfileBtn: Button
    - followingVibesBtn: Button
    - mapBtn: Button
    - addVibeBtn: Button

    - vibesRequest()
    - editVibe(vibe: Vibe)
    - filterVibes(text: String)
}

note left of CUDVibeActivity: "Create/Update/Delete Vibes"
Class CUDVibeActivity {
    - emotionalStateBtn: Button
    - emotionalStateSelected: EmotionalState

    - dateField: DatePicker
    - reasonField: EditText
    - pictureField: ImageView
    - socialSituationField: String

    - saveBtn: Button
    - deleteBtn: Button

    - openEmotionalStatePickerFragment()
}

Class ViewVibeActivity {
    - emotionalStateEmoticonField: ImageView
    - emotionalStateNameField: TextView
    - dateField: TextView
    - reasonField: TextView
    - pictureField: ImageView
    - socialSituationField: TextView
}


Class ViewProfileActivity {
    - username: TextView
    - logoutBtn: Button
}


Class SocialActivity {
    - requests: Profile[]
    - following: Profile[]
    - followers: Profile[]

    - getRelationships()
    - openRequests(requests: Profile[])
    - openFollowing(following: Profile[])
    - openFollowers(followers: Profile[])
}

Class ExploreVibesActivity {
    - searchField: EditText
    - usersAdapter: UsersAdapter

    - findUsersRequest(search: String)
    - createFollowRequest(username: String)
}

Class MapActivity {

}

' ----------------------- Fragments -----------------------

Class CreateProfileFragment {
    - usernameField: EditText
    - passwordField: EditText
    - passwordConfirmField: EditText
    - createAccountBtn: Button
}

Class RequestsFragment {
    - requestsAdapter: RequestsAdapter 
    - acceptFollowRequest(username: String)
    - declineFollowRequest(username: String)
}

Class FollowingFragment {
    - followingAdapter: FollowingAdapter 
}

Class FollowersFragment {
    - followersAdapter: FollowersAdapter 
}

Class EmotionalStatePickerFragment {
    - emotionalStateSelected: Emotion
}

' ---------------------- Classes ----------------------

Class Profile {
    - username: String

    + getUsername()
}

Class Vibe {
    - emotion: Emotion
    - date: Date
    - reason: String
    - socialSituation: String

    + getEmotion()
    + getDate()
    + getReason()
    + getSocialSituation()
    
    + setEmotion(emotion: Emotion)
    + setDate(date: Date)
    + setReason(reason: String)
    + setSocialSituation(socialSituation: String)
}

Class EmotionalState {
    - emoticon: ImageView
    - name: String
    - color: Color

    + getEmoticon()
    + getName()
    + getColor()

    + setEmoticon(emoticon: ImageView)
    + setName(name: String)
    + setColor(color: Color)

}

Class User {
    - name: String
    - status: String

    + getName()
    + getStatus()

    + setName(name: String)
    + setStatus(status: String)
}

' ---------------------- Adapters ----------------------

Class MyVibesAdapter {
    - vibes: ArrayList<Vibe>

}

Class FollowersAdapter {
    - users: ArrayList<User>

}

Class FollowingAdapter {
    - users: ArrayList<User>

}

Class RequestsAdapter {
    - followRequests: ArrayList<User>

}
Class UsersAdapter {
    - users: ArrayList<User>

}

' ---------------------- Helpers ----------------------

Class Database {
    - db: FirebaseFirestore
    - vibesRequest()
}

' -----------------------------------------------------
' ******************* Relationships *******************
' -----------------------------------------------------
' MainActivity
' MyVibesActivity
' CUDVibeActivity
' ViewVibeActivity
' ViewProfileActivity
' SocialActivity
' ExploreVibesActivity
' MapActivity

' CreateProfileFragment
' RequestsFragment
' FollowingFragment
' FollowersFragment
' EmotionalStatePickerFragment

' Profile
' Vibe
' EmotionalState
' User
' MyVibesAdapter
' FollowersAdapter
' FollowingAdapter
' RequestsAdapter
' UsersAdapter

' Database

' ------------------- Navigation --------------------
MainActivity -- CreateProfileFragment: navigate >
MainActivity -- MyVibesActivity: navigate >

MyVibesActivity -- ViewProfileActivity:  navigate >
MyVibesActivity -- CUDVibeActivity: navigate >
MyVibesActivity -- ViewVibeActivity: navigate >
MyVibesActivity -- SocialActivity: navigate >
MyVibesActivity -- MapActivity: navigate >

CUDVibeActivity -- EmotionalStatePickerFragment: navigate >

SocialActivity -- RequestsFragment: navigate >
SocialActivity -- FollowingFragment: navigate >
SocialActivity -- FollowersFragment: navigate >
SocialActivity -- ExploreVibesActivity: navigate >
SocialActivity -- MapActivity: navigate >

' ------------------- Adapters -------------------
MyVibesActivity -- MyVibesAdapter 
RequestsFragment -- RequestsAdapter  
FollowingFragment -- FollowingAdapter  
FollowersFragment -- FollowersAdapter 
ExploreVibesActivity -- UsersAdapter 


MyVibesAdapter -- Vibe
RequestsAdapter -- User
FollowingAdapter -- User
FollowersAdapter -- User
UsersAdapter -- User

' ------------------- Others -------------------
MainActivity -- Database: create >
CUDVibeActivity -- Vibe
Vibe -- Emoticon
Profile -- ViewProfileActivity
    
@enduml